void bulk_update_items_CRM(list line_items, string organization_id)
{
/**
 * This function updates with bulk update all the items that are modified validating if the ID-CRM field 	is null if it is null it updates this field consulting in Zoho CRM.
 * Made by: Brayan Devia.
 * Contact: velaio.com
 * 
 * @param line_items 
 * @param organization_id 
*/
record_map = list();
list_update = list();
api_calls = 0;
info "Items found: " + line_items.size();
for each  line_item in line_items
{
	item_id = line_item.get("item_id");
	item_resp = zoho.books.getRecordsByID("items",organization_id,item_id,"zoho_books").get("item");
	api_calls = api_calls + 1;
	name = item_resp.get("name");
	sku = item_resp.get("sku");
	description = item_resp.get("description");
	description_purchase = item_resp.get("purchase_description");
	sales_rate = item_resp.get("sales_rate");
	qty_in_stock = item_resp.get("stock_on_hand");
	custom_fields = item_resp.get("custom_fields");
	stock_on_hand = 0;
	committed_stock = 0;
	available_for_sale = 0;
	pending_stock = 0;
	stock_in_draft = 0;
	id_CRM = "";
	info "Item ID: " + item_id + ", Name: " + name;
	for each  custom_field in custom_fields
	{
		label = custom_field.get("label");
		if(label == "Stock on Hand")
		{
			stock_on_hand = custom_field.get("value");
		}
		if(label == "Committed Stock")
		{
			committed_stock = custom_field.get("value");
		}
		if(label == "Available for Sale")
		{
			available_for_sale = custom_field.get("value");
		}
		if(label == "Pending Stock")
		{
			pending_stock = custom_field.get("value");
		}
		if(label == "Stock in Draft")
		{
			stock_in_draft = custom_field.get("value");
		}
		if(label == "ID-CRM")
		{
			id_CRM = custom_field.get("value");
		}
	}
	if(id_CRM == "")
	{
		info "This item doesn't have ID for CRM, searching in Zoho CRM";
		criteria = "(ID_SKU:equals:" + sku + ")";
		item_CRM = zoho.crm.searchRecords("Products",criteria);
		api_calls = api_calls + 1;
		if(item_CRM.size() == 0)
		{
			info "This item doesn't exist in Zoho CRM (not updated)";
		}
		else
		{
			id_CRM = item_CRM.get(0).get("id");
			update = {"custom_fields":{{"label":"ID-CRM","value":id_CRM}}};
			item_updated = zoho.books.updateRecord("items",organization_id,item_id,update,"zoho_books");
			api_calls = api_calls + 1;
			info "ID-CRM assigned: " + id_CRM;
		}
	}
	record_map = {
    "id":id_CRM,
    "Product_Name":name,
    "Description":description,
    "Purchase_Description":description_purchase,
    "Stock_on_Hand":stock_on_hand,
    "Stock_in_Draft1":stock_in_draft,
    "Committed_Stock1":committed_stock,
    "Available_for_Sale":available_for_sale,
    "Sales_Price":sales_rate,
    "Pending_Stock":pending_stock,
    "Qty_in_Stock":qty_in_stock
  };
	list_update.add(record_map);
	info "data to update in CRM:";
	info record_map;
	if(line_items.size() > 1)
	{
		info "-------------------------NEXT ITEM-----------------------";
	}
}
info "Updating item in Zoho CRM";
crm_update = zoho.crm.bulkUpdate("Products",list_update);
api_calls = api_calls + 1;
info "API CALLS: " + api_calls;
info "UPDATE: " + crm_update.get(0).get("code");
info "-------------------------END EXECUTION-----------------------";
}