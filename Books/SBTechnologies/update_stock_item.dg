
itemId = item.get("item_id");
organizationId = organization.get("organization_id");
timeStart = now;
timeEnd = 0;
totalTime = 0;
try 
{
	item = zoho.books.getRecordsByID("items",organizationId,itemId,"zbooks_cnn").get("item");
	//info item;
	customFields = item.get("custom_fields");
	stockInDraft = 0;
	for each  customField in customFields
	{
		if(customField.get("label") == "Stock in Draft")
		{
			stockInDraft = customField.get("value");
		}
	}
	updateFields = {'custom_fields':{{'label':'Stock in Draft','value':stockInDraft},{'label':'Stock on Hand','value':item.get("actual_available_stock")},{'label':'Committed Stock','value':item.get("actual_committed_stock")},{'label':'Available for Sale','value':item.get("actual_available_for_sale_stock") - stockInDraft}}};
	itemUpdated = zoho.books.updateRecord("items",organizationId,itemId,updateFields,"zbooks_cnn");
	// info itemUpdated;
	if(itemUpdated.get("code") == 0)
	{
		info itemUpdated.get("message");
		info "ITEM: " + item.get("name");
		info "ID: " + item.get("item_id");
		info "------------------------------------------";
	}
	else
	{
		info itemUpdated;
	}
	timeEnd = now;
	totalTime = timeStart.timeBetween(timeEnd);
	info "Inicio ejecución: " + timeStart;
	info "Fin ejecución: " + timeEnd;
	info "Tiempo: " + totalTime;
}
 catch (e)
{	info "¡Error el ejecutar la función!";
	info e.toString();
	timeEnd = now;
	totalTime = timeStart.timeBetween(timeEnd);
	info "Inicio ejecución: " + timeStart;
	info "Fin ejecución: " + timeEnd;
	info "Tiempo: " + totalTime;
}
