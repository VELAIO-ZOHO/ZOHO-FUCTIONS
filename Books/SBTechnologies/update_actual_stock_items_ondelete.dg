
timeStart = now;
timeEnd = 0;
totalTime = 0;
try 
{
	organizationID = organization.get("organization_id");
	soStatus = salesorder.get("status");
	soItems = salesorder.get("line_items");
	for each  item in soItems
	{
		itemId = item.get("product_id");
		quantity = item.get("quantity");
		stockInDraft = 0;
		availableForSale = 0;
		customFields = item.get("item_custom_fields");
		for each  field in customFields
		{
			fieldLabel = field.get("label");
			if(fieldLabel == "Stock in Draft")
			{
				stockInDraft = field.get("value");
			}
			if(fieldLabel == "Available for Sale")
			{
				availableForSale = field.get("value");
			}
		}
		newStockInDraft = stockInDraft - quantity;
		newAvailableForSale = availableForSale + quantity;
		info "item: " + item.get("name");
		info "Quantity saled: " + quantity;
		info "Stock in draft actual: " + stockInDraft;
		info "New Stock in draft: " + newStockInDraft;
		info "Available for Sale actual: " + availableForSale;
		info "New Available for Sale: " + newAvailableForSale;
		update = {"custom_fields":{{"label":"Stock in Draft","value":newStockInDraft},{"label":"Available for Sale","value":newAvailableForSale}}};
		itemUpdated = zoho.books.updateRecord("items",organizationID,itemId,update,"zbooks_cnn");
		// info itemUpdated;
		info "---------------------------------------------------------------------";
	}
	timeEnd = now;
	totalTime = timeStart.timeBetween(timeEnd);
	info "Inicio ejecución: " + timeStart;
	info "Fin ejecución: " + timeEnd;
	info "Tiempo: " + totalTime;
}
 catch (e)
{	info "¡Error al ejecutar la función!";
	info "SO: " + salesorder.get("salesorder_id");
	info e.toString();
	timeEnd = now;
	totalTime = timeStart.timeBetween(timeEnd);
	info "Inicio ejecución: " + timeStart;
	info "Fin ejecución: " + timeEnd;
	info "Tiempo: " + totalTime;
}
