pageList = {1};
//pageList = [1,2,3,4,5,6,7,8,9,10];
all_experts = List();
api_calls_used = 0;

for each page in pageList
{
    query = {"Email":page,"per_page":"1"};
    fetched_experts = zoho.crm.getRecords("Experts_recruit",page,1);
	//info fetched_experts;
    api_calls_used = api_calls_used + 1;

    // Verifica si la respuesta no es nula y contiene el campo esperado
    if (fetched_experts != null)
    {
        if(fetched_experts.size() > 0)
        {
            all_experts.addAll(fetched_experts);
        }
        else
        {
            // Salir del bucle si no hay más registros
            break;
        }
    }
    else
    {
        // Maneja el caso de un error o respuesta vacía
        info "Error al obtener registros o no hay datos.";
        break;
    }
}

info all_experts.size();
info "API Calls used: " + api_calls_used;

for each expert in all_experts
{
    expert_email = expert.get("Email");
    expert_email = "martin.hiemstra@dmk.de";
	//expert_email = "ayeshaamushtaque@gmail.com";
    //query = {"Email":expert_email};
    params = map();
    params.put("select_query", "select id, Email, Email_Opt_Out, Workflow_Dummy_Value, Created_Time from Experts_recruit where Email = '" + expert_email + "'");
	
    duplicate_records = invokeurl
    [
    	url: "https://www.zohoapis.eu/crm/v6/coql"
    	type: POST
    	parameters: params.toString()
    	connection: "zcrm_all"
    ];
    duplicate_records = duplicate_records.get("data");
    info duplicate_records;

    // Variables para mantener el registro a conservar
    record_to_keep = null;
    
    for each record in duplicate_records
    {
        if(record.get("Workflow_Dummy_Value") == "Yes")
        {
            record_to_keep = record;
            break;
        }
    }

    if(record_to_keep == null)
    {
        for each record in duplicate_records
        {
            if(record.get("Email_Opt_Out") == "Yes")
            {
                record_to_keep = record;
                break;
            }
        }
    }

    if(record_to_keep == null)
    {
        for each record in duplicate_records
        {
            if(record_to_keep == null || record.get("Created_Time") < record_to_keep.get("Created_Time"))
            {
                record_to_keep = record;
            }
        }
    }
	
	info record_to_keep;

    // Eliminar los registros duplicados, excepto el que se debe conservar
    for each record in duplicate_records
    {
        if(record.get("id") != record_to_keep.get("id"))
        {
            // Eliminar registro
             info "Deleting record with id: " + record.get("id");
            // deleteRecord = zoho.crm.deleteRecord("Experts_recruit", record.get("id"));
        }
    }
}
